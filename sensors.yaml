### Weather/Forecast Info

 - platform: darksky
   api_key: !secret forecast_io_api_key
   monitored_conditions:
    - summary
    - icon
    - nearest_storm_distance
    - nearest_storm_bearing
    - precip_type
    - precip_intensity
    - precip_probability
    - temperature
    - apparent_temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
    - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_high
    - temperature_low
    - apparent_temperature_high
    - apparent_temperature_low
    - precip_intensity_max

### Speedtest

 # - platform: speedtest
   # monitored_conditions:
    # - ping
    # - download
    # - upload
    
## OctoPrint
 - platform: octoprint
   name: OctoPrint
   monitored_conditions:
    - Current State
    - Temperatures
    - Job Percentage

 - platform: mqtt
   state_topic: "bruh/sensornode1"
   name: "Living Room Light Level"
   ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
   unit_of_measurement: "LUX"
   value_template: '{{ value_json.ldr }}'
   
 - platform: mqtt
   state_topic: "sensor/kitchen"
   name: "Kitchen Motion"
   value_template: '{{ value_json.motion }}'
   
 - platform: mqtt
   state_topic: "room/laundry/sensor"
   name: "Laundry Room Motion"
   value_template: '{{ value_json.motion }}'

   
## occupancy https://community.home-assistant.io/t/reliable-multi-user-distributed-bluetooth-occupancy-presence-detection/50674
 - platform: mqtt
   state_topic: 'location/master_bedrm/tyler'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Tyler Master Bedroom'

 - platform: mqtt
   state_topic: 'location/kitchen/tyler'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Tyler Kitchen'
   
 - platform: mqtt
   state_topic: 'location/master_bedrm/amy'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Amy Master Bedroom'

 - platform: mqtt
   state_topic: 'location/kitchen/amy'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Amy Kitchen'
   
 - platform: min_max
   name: "Tyler Home Occupancy Confidence"
   type: mean
   round_digits: 0
   entity_ids:
     - sensor.tyler_master_bedroom
     - sensor.tyler_kitchen

 - platform: min_max
   name: "Amy Home Occupancy Confidence"
   type: mean
   round_digits: 0
   entity_ids:
     - sensor.amy_master_bedroom
     - sensor.amy_kitchen
     
 - platform: time_date
   display_options:
     - 'time'
     - 'date'
     - 'date_time'
     - 'time_date'
     - 'time_utc'
     - 'beat'
     
 - platform: waze_travel_time
   name: "Tyler to Work"
   origin: device_tracker.tyler_pixel4
   destination: zone.insitu_eagle_point
   region: 'US'
   realtime: true
   
 - platform: waze_travel_time
   name: "Tyler to Home"
   origin: device_tracker.tyler_pixel4
   destination: zone.home
   region: 'US'
   realtime: true
   
 - platform: waze_travel_time
   name: "Amy to Work"
   origin: device_tracker.amy_pixel2
   destination: zone.simplexity
   region: 'US'
   realtime: true
   
 - platform: waze_travel_time
   name: "Amy to Home"
   origin: device_tracker.amy_pixel2
   destination: zone.home
   region: 'US'
   realtime: true

 - platform: template
   sensors:
     tyler_status:
       value_template: >-
           {% if is_state("binary_sensor.tyler_home","on") %}
           home
           {% elif is_state("input_select.tyler_status","running") and is_state("device_tracker.tyler_pixel4","LSAC") %}
           swimming
           {% elif not is_state("input_select.tyler_status", "standby") %}
           {{ states("input_select.tyler_status") }}
           {% else %}
           {{ states("device_tracker.tyler_pixel4") }}
           {%- endif %}
           
 - platform: template
   sensors:
     amy_status:
       value_template: >-
           {% if is_state("binary_sensor.amy_home","on") %}
           home
           {% elif is_state("input_select.amy_status","running") and is_state("device_tracker.amy_pixel2","LSAC") %}
           swimming
           {% elif not is_state("input_select.amy_status", "standby") %}
           {{ states("input_select.amy_status") }}
           {% else %}
           {{ states("device_tracker.amy_pixel2") }}
           {%- endif %}
           
 - platform: mqtt
   state_topic: "/room/master_bedrm/bed/load"
   name: Bed Mass
   unit_of_measurement: "units"
   
 - platform: filter
   name: bed_mass_raw_smoothed
   entity_id: sensor.bed_mass
   filters:
     - filter: time_simple_moving_average
       window_size: 00:00:02
       precision: 1
   
 - platform: template
   sensors:
     bed_mass_calibrated:
       value_template: "{{ (states('sensor.bed_mass_raw_smoothed')|float / -1.845238) | round(0) }}"
       ## changed factor to -1.68668, but reverted back to -1.845238 on 26 Nov 2019
       unit_of_measurement: 'kg'
       
 - platform: template
   sensors:
     dark_sky_pressure_inhg:
       friendly_name: Dark Sky Pressure inHg
       value_template: "{{ (states('sensor.dark_sky_pressure')|float / 33.864) | round(2) }}"
       unit_of_measurement: 'inHg'
       icon_template: >-
         mdi:gauge
         
 - platform: template
   sensors:
     inside_air_temperature:
       value_template: "{{ states.climate.living_room.attributes.current_temperature }}"
       unit_of_measurement: 'Â°F'
      
 - platform: zwift
   username: !secret my_zwift_username
   password: !secret my_zwift_password
   players:
     - !secret amy_zwift_id
     
 - platform: template
   sensors:
     octoprint_time_remaining_friendly:
       friendly_name: Octoprint Time Remaining
       value_template: >-
         {% set t = states('sensor.octoprint_time_remaining') | int %}
         {{ '{:d}d {:02d}h {:02d}m {:02d}s'.format(t // 86400, (t // 3600) % 24, (t % 3600) // 60, (t % 3600) % 60) }}
          
 - platform: template
   sensors:
     octoprint_time_elapsed_friendly:
       friendly_name: Octoprint Time Elapsed
       value_template: >-
         {% set t = states('sensor.octoprint_time_elapsed') | int %}
         {{ '{:d}d {:02d}h {:02d}m {:02d}s'.format(t // 86400, (t // 3600) % 24, (t % 3600) // 60, (t % 3600) % 60) }}
         
 - platform: template
   sensors:
     octoprint_estimated_completion_time:
       friendly_name: Octoprint ETC
       value_template: >-
         {{ (states('sensor.octoprint_time_remaining') | float + now().timestamp() | int) | timestamp_custom("%R", true) }}