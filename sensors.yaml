### Weather/Forecast Info

 # - platform: darksky
   # api_key: !secret forecast_io_api_key
   # monitored_conditions:
    # - summary
    # - icon
    # - nearest_storm_distance
    # - nearest_storm_bearing
    # - precip_type
    # - precip_intensity
    # - precip_probability
    # - temperature
    # - apparent_temperature
    # - dew_point
    # - wind_speed
    # - wind_bearing
    # - cloud_cover
    # - humidity
    # - pressure
    # - visibility
    # - ozone
    # - minutely_summary
    # - hourly_summary
    # - daily_summary
    # - temperature_high
    # - temperature_low
    # - apparent_temperature_high
    # - apparent_temperature_low
    # - precip_intensity_max

### Speedtest

 # - platform: speedtest
   # monitored_conditions:
    # - ping
    # - download
    # - upload
    
## OctoPrint
 - platform: octoprint
   name: OctoPrint
   monitored_conditions:
    - Current State
    - Temperatures
    - Job Percentage

 - platform: mqtt
   state_topic: "bruh/sensornode1"
   name: "Living Room Light Level"
   ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
   unit_of_measurement: "LUX"
   value_template: '{{ value_json.ldr }}'
   
 - platform: mqtt
   state_topic: "sensor/kitchen"
   name: "Kitchen Motion"
   value_template: '{{ value_json.motion }}'
   
 - platform: mqtt
   state_topic: "room/laundry/sensor"
   name: "Laundry Room Motion"
   value_template: '{{ value_json.motion }}'

   
## occupancy https://community.home-assistant.io/t/reliable-multi-user-distributed-bluetooth-occupancy-presence-detection/50674
 - platform: mqtt
   state_topic: 'location/master_bedrm/tyler'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Tyler Master Bedroom'

 - platform: mqtt
   state_topic: 'location/kitchen/tyler'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Tyler Kitchen'
   
 - platform: mqtt
   state_topic: 'location/master_bedrm/amy'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Amy Master Bedroom'

 - platform: mqtt
   state_topic: 'location/kitchen/amy'
   value_template: '{{ value_json.confidence }}'
   unit_of_measurement: '%'
   name: 'Amy Kitchen'
   
 - platform: min_max
   name: "Tyler Home Occupancy Confidence"
   type: mean
   round_digits: 0
   entity_ids:
     - sensor.tyler_master_bedroom
     - sensor.tyler_kitchen

 - platform: min_max
   name: "Amy Home Occupancy Confidence"
   type: mean
   round_digits: 0
   entity_ids:
     - sensor.amy_master_bedroom
     - sensor.amy_kitchen
     
 - platform: time_date
   display_options:
     - 'time'
     - 'date'
     - 'date_time'
     - 'time_date'
     - 'time_utc'
     - 'beat'
     
 # - platform: waze_travel_time
   # name: "Tyler to Eagle Point"
   # origin: device_tracker.tyler_tyler
   # destination: zone.insitu_eagle_point
   # region: 'US'
   
 # - platform: waze_travel_time
   # name: "Tyler to Waucoma"
   # origin: device_tracker.tyler_tyler
   # destination: zone.insitu_waucoma
   # region: 'US'
   
 # - platform: waze_travel_time
   # name: "Tyler to Home"
   # origin: device_tracker.tyler_tyler
   # destination: zone.home
   # region: 'US'
   
 # - platform: waze_travel_time
   # name: "Tyler to Tesla M3"
   # origin: device_tracker.tyler_tyler
   # destination: device_tracker.tesla_model_3_5yj3e1ebxjf063608_location_tracker
   # region: 'US'

 - platform: template
   sensors:
     tyler_status:
       value_template: >-
           {% if is_state("binary_sensor.tyler_home","on") %}
           home
           {% elif is_state("input_select.tyler_status","running") and is_state("device_tracker.tyler_tyler","LSAC") %}
           swimming
           {% elif not is_state("input_select.tyler_status", "standby") %}
           {{ states("input_select.tyler_status") }}
           {% else %}
           {{ states("device_tracker.tyler_tyler") }}
           {%- endif %}
           
 - platform: template
   sensors:
     amy_status:
       value_template: >-
           {% if is_state("binary_sensor.amy_home","on") %}
           home
           {% elif is_state("input_select.amy_status","running") and is_state("device_tracker.tyler_amy","LSAC") %}
           swimming
           {% elif not is_state("input_select.amy_status", "standby") %}
           {{ states("input_select.amy_status") }}
           {% else %}
           {{ states("device_tracker.tyler_amy") }}
           {%- endif %}
           
 - platform: mqtt
   state_topic: "/room/master_bedrm/bed/load"
   name: Bed Mass
   unit_of_measurement: "units"
   
 - platform: filter
   name: bed_mass_raw_smoothed
   entity_id: sensor.bed_mass
   filters:
     - filter: time_simple_moving_average
       window_size: 00:00:02
       precision: 1
   
 - platform: template
   sensors:
     bed_mass_calibrated:
       value_template: "{{ (states('sensor.bed_mass_raw_smoothed')|float / -1.845238) | round(0) }}"
       unit_of_measurement: 'kg'
       
     