# Binary sensors
  - platform: threshold
    name: "Is It Dark"
    lower: 400
    hysteresis: 50
    entity_id: sensor.living_room_light_level
    
  - platform: threshold
    name: "Is It Kind Of Dark"
    lower: 520
    hysteresis: 50
    entity_id: sensor.living_room_light_level
    
  # - platform: threshold
    # name: "Is It Dark PWS"
    # lower: 10
    # hysteresis: 2
    # entity_id: sensor.pws_solar_radiation
    
  # - platform: threshold
    # name: "Is It Kind Of Dark PWS"
    # lower: 30
    # hysteresis: 2
    # entity_id: sensor.pws_solar_radiation
    
  - platform: template
    sensors:
      is_it_dark_pws:
        delay_off:
          minutes: 2
        value_template: >
          {% set sensor_value = states('sensor.pws_solar_radiation')|float(0) %}
          {% set threshold_on = 8 %}
          {% set threshold_off = 12 %}
          {% if is_state('binary_sensor.is_it_dark_pws', 'off') %}
            {% if sensor_value < threshold_on %}
              true
            {% else %}
              false
            {% endif %}
          {% else %}
            {% if sensor_value > threshold_off %}
              false
            {% else %}
              true
            {% endif %}
          {% endif %}
          
  - platform: template
    sensors:
      is_it_kind_of_dark_pws:
        delay_off:
          minutes: 2
        value_template: >
          {% set sensor_value = states('sensor.pws_solar_radiation')|float(0) %}
          {% set threshold_on = 28 %}
          {% set threshold_off = 32 %}
          {% if is_state('binary_sensor.is_it_kind_of_dark_pws', 'off') %}
            {% if sensor_value < threshold_on %}
              true
            {% else %}
              false
            {% endif %}
          {% else %}
            {% if sensor_value > threshold_off %}
              false
            {% else %}
              true
            {% endif %}
          {% endif %}
    
  - platform: template
    sensors:
      tyler_home:
        value_template: >-
          {{ states('sensor.tyler_home_occupancy_confidence')|float(0) > 10 }}

  - platform: template
    sensors:
      amy_home:
        value_template: >-
          {{ states('sensor.amy_home_occupancy_confidence')|float(0) > 10 }}

  - platform: template
    sensors:
      anybody_home:
        value_template: >-
          {{ is_state('binary_sensor.tyler_home', 'on')
             or is_state('binary_sensor.amy_home', 'on') }}
             
  - platform: template
    sensors:
      house_asleep:
        value_template: >-
          {% set hour = states('sensor.time').split(':')[0]|int %}
          {% set was_asleep = is_state('binary_sensor.house_asleep','on') %}
          {% set tyler_asleep = is_state('binary_sensor.tyler_home', 'on') and
                                (is_state('input_select.tyler_status', 'sleeping') or is_state('input_select.tyler_status', 'alarming')) %}
          {% set amy_asleep = is_state('binary_sensor.amy_home', 'on') and
                              (is_state('input_select.amy_status', 'sleeping') or is_state('input_select.amy_status', 'alarming')) %}
          {{ (is_state('binary_sensor.anybody_home', 'off') and (hour > 22 or hour < 6)) or
             (tyler_asleep and amy_asleep) or
             (was_asleep and (tyler_asleep or amy_asleep)) or
             (is_state('binary_sensor.tyler_home', 'off') and amy_asleep) or
             (is_state('binary_sensor.amy_home', 'off') and tyler_asleep) }}
             
  - platform: template
    sensors:
      house_asleep_delay:
        delay_off:
          minutes: 90
        value_template: >-
          {{ is_state('binary_sensor.house_asleep', 'on') }}
              
  - platform: mqtt
    name: "Garage Door - Tyler"
    state_topic: "garagev2/door/1/status"
    payload_on: "open"
    payload_off: "closed"
    availability_topic: "GarHAge_PoE/availability"
    device_class: garage_door
    qos: 0

  - platform: mqtt
    name: "Garage Door - Amy"
    state_topic: "garagev2/door/2/status"
    payload_on: "open"
    payload_off: "closed"
    availability_topic: "GarHAge_PoE/availability"
    device_class: garage_door
    qos: 0

  - platform: mqtt
    name: "Garage Door - Bikes"
    state_topic: "garagev2/door/3/status"
    payload_on: "open"
    payload_off: "closed"
    availability_topic: "GarHAge_PoE/availability"
    device_class: garage_door
    qos: 0

  - platform: template
    sensors:
      garage_open:
        value_template: >-
          {{ is_state('binary_sensor.garage_door_amy', 'on')
             or is_state('binary_sensor.garage_door_bikes', 'on')
             or is_state('binary_sensor.garage_door_tyler', 'on')
          }}
          
  - platform: template
    sensors:
      exterior_door_open:
        value_template: >-
          {{ is_state('binary_sensor.reed_front_door', 'on')
             or is_state('binary_sensor.reed_garage_entry', 'on')
             or is_state('binary_sensor.reed_grill_door', 'on')
             or is_state('binary_sensor.reed_basement_entry', 'on')
             or is_state('binary_sensor.reed_dining_entry', 'on')
          }}
      
          
  - platform: template
    sensors:
      bt_monitor_disagree:
        delay_on:
          minutes: 10
        value_template: >-
          {{ (states('sensor.tyler_home_occupancy_confidence')|float(0) > 0 and states('sensor.tyler_home_occupancy_confidence')|float(0) < 100)
            or (states('sensor.amy_home_occupancy_confidence')|float(0) > 0 and states('sensor.amy_home_occupancy_confidence')|float(0) < 100)
          }}
          
  - platform: template
    sensors:
      location_disagree:
        delay_on:
          minutes: 10
        value_template: >-
          {{ (is_state("person.tyler","home") and is_state("binary_sensor.tyler_home","off"))
            or (not is_state("person.tyler","home") and is_state("binary_sensor.tyler_home","on"))
            or (is_state("person.amy","home") and is_state("binary_sensor.amy_home","off"))
            or (not is_state("person.amy","home") and is_state("binary_sensor.amy_home","on"))
          }}
          
          
  - platform: template
    sensors:
      kitchen_motion_delay:
        friendly_name: "Kitchen Motion Detection"
        delay_off:
          minutes: 3
        value_template: >-
          {{ is_state('sensor.kitchen_motion', 'motion detected') }}
      laundry_room_motion_delay:
        friendly_name: "Laundry Room Motion Detection"
        delay_off:
          minutes: 3
        value_template: >-
          {{ is_state('sensor.laundry_room_motion', 'motion detected') }}
          
  # - platform: template
    # sensors:
      # laundry_room_motion_delay:
        # friendly_name: "Laundry Room Motion Detection"
        # delay_off:
          # minutes: 3
        # value_template: >-
          # {{ is_state('sensor.laundry_room_motion', 'motion detected') }}
          
  # - platform: template
    # sensors:
      # tyler_in_bed:
        # value_template: >-
            # {{ states('sensor.bed_mass_calibrated')|float(0) >= 70 }}
            
  # - platform: template
    # sensors:
      # amy_in_bed:
        # value_template: >-
            # {{ (states('sensor.bed_mass_calibrated')|float(0) > 50 and states('sensor.bed_mass_calibrated')|float(0) < 70) or states('sensor.bed_mass_calibrated')|float(0) > 130 }}
            
  # - platform: template
    # sensors:
      # both_in_bed:
        # value_template: >-
            # {{ states('sensor.bed_mass_calibrated')|float(0) > 130 }}
            
  # - platform: template
    # sensors:
      # anybody_in_bed:
        # value_template: >-
            # {{ is_state('binary_sensor.tyler_in_bed', 'on') or is_state('binary_sensor.amy_in_bed', 'on') }}
            
  - platform: mqtt
    name: "Front Door Motion"
    state_topic: blue_iris/motion/front_door/state
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: mqtt
    name: "Back Porch Motion"
    state_topic: blue_iris/motion/back_porch/state
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: template
    sensors:
      anybody_on_zwift:
        value_template: >-
            {{ is_state('sensor.zwift_online_945016', 'True') or is_state('sensor.zwift_online_1257082', 'True') }}
            
  - platform: template
    sensors:
      back_porch_motion_person_delay:
        delay_off:
          minutes: 2
        value_template: >-
            {{ is_state('binary_sensor.back_porch_person', 'on') }}
            
  - platform: template
    sensors:
      shop_door_motion_person_delay:
        delay_off:
          minutes: 2
        value_template: >-
            {{ is_state('binary_sensor.shop_door_person', 'on') }}
            
  - platform: template
    sensors:
      front_door_motion_delay:
        delay_off:
          minutes: 2
        value_template: >-
            {{ is_state('binary_sensor.front_door_motion', 'on') }}
            
  - platform: template
    sensors:
      anybody_on_zwift_delay:
        delay_off:
          minutes: 10
        value_template: >-
            {{ is_state('binary_sensor.anybody_on_zwift', 'on') }}
            
  # - platform: aurora
    # forecast_threshold: 20
    
  - platform: mqtt
    name: "Driveway Person"
    state_topic: blue_iris/AI/driveway/person
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: mqtt
    name: "Front Door Person"
    state_topic: blue_iris/AI/front_door/person
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: mqtt
    name: "Back Porch Person"
    state_topic: blue_iris/AI/back_porch/person
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: mqtt
    name: "Back Walkway Person"
    state_topic: blue_iris/AI/back_walkway/person
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: mqtt
    name: "Shop Door Person"
    state_topic: blue_iris/AI/shop_door/person
    payload_on: "ON"
    payload_off: "OFF"
    device_class: motion
    
  - platform: mqtt
    name: "Driveway Vehicle"
    state_topic: blue_iris/AI/driveway/vehicle
    payload_on: "ON"
    payload_off: "OFF"
    device_class: moving
    
  - platform: mqtt
    name: "Front Door Vehicle"
    state_topic: blue_iris/AI/front_door/vehicle
    payload_on: "ON"
    payload_off: "OFF"
    device_class: moving
    
  - platform: mqtt
    name: "LEDBar Office Update"
    state_topic: "ledbar/office/updateflag"
    payload_on: "updateMe"
    payload_off: "weGood"
    qos: 0
    
  - platform: mqtt
    name: "LEDBar Living Room Update"
    state_topic: "ledbar/living_room/updateflag"
    payload_on: "updateMe"
    payload_off: "weGood"
    qos: 0

  - platform: template
    sensors:
      tyler_in_bed:
        delay_on:
          seconds: 5
        delay_off:
          seconds: 2
        value_template: >-
            {{ states('sensor.tyler_bed_occupancy_raw')|float(0) < states('input_number.master_bed_trigger_level')|float(0) }}
      
  - platform: template
    sensors:
      amy_in_bed:
        delay_on:
          seconds: 5
        delay_off:
          seconds: 2
        value_template: >-
            {{ states('sensor.amy_bed_occupancy_raw')|float(0) < states('input_number.master_bed_trigger_level')|float(0) }}
      
  - platform: template
    sensors:
      anybody_in_bed:
        value_template: >-
            {{ is_state('binary_sensor.tyler_in_bed', 'on') or is_state('binary_sensor.amy_in_bed', 'on') }}
            
  - platform: template
    sensors:
      both_in_bed:
        value_template: >-
            {{ is_state('binary_sensor.tyler_in_bed', 'on') and is_state('binary_sensor.amy_in_bed', 'on') }}
            
  - platform: template
    sensors:
      tyler_out_of_bed_while_asleep:
        value_template: >-
            {{ is_state('binary_sensor.tyler_in_bed','off') and
               is_state('binary_sensor.house_asleep','on') and
               is_state('input_select.tyler_status','sleeping') }}
            
  - platform: template
    sensors:
      amy_out_of_bed_while_asleep:
        value_template: >-
            {{ is_state('binary_sensor.amy_in_bed','off') and
               is_state('binary_sensor.house_asleep','on') and
               is_state('input_select.amy_status','sleeping') }}
               
  - platform: template
    sensors:
      could_windows_be_open:
        delay_off:
          minutes: 3
        delay_on:
          minutes: 3
        value_template: >-
            {% set aqi = states('sensor.purpleair_aqi')|float(0) %}
            {% set pollen = states('sensor.allergy_index_today')|float(0) %}
            {% set t_out = states('sensor.pws_outdoor_temperature')|float(0) %}
            {% set t_in = state_attr('climate.main_floor','current_temperature')|float(0) %}
            {% set target = state_attr('climate.main_floor','temperature')|float(0) %}
            {% set low_target = state_attr('climate.main_floor','target_temp_low')|float(0) %}
            {% set high_target = state_attr('climate.main_floor','target_temp_high')|float(0) %}
            {% set mode = states('climate.main_floor') %}
            {{ aqi < 70 and pollen < 7.0 and (
               (is_state('climate.main_floor','heat_cool') and (t_out <= t_in and t_in > low_target)) or
               (is_state('climate.main_floor','cool') and t_out <= t_in) or
               (is_state('climate.main_floor','heat') and (t_in > target)) or
               (is_state('climate.main_floor','off'))
               )
            }}
            
  - platform: template
    sensors:
      anybody_out_of_bed_while_asleep:
        value_template: >-
            {{ is_state('binary_sensor.amy_out_of_bed_while_asleep','on') or
               is_state('binary_sensor.tyler_out_of_bed_while_asleep','on') }}
               
  - platform: template
    sensors:
      okay_to_turn_circ_lights_on:
        delay_on:
          minutes: 90
        value_template: >-
          {{ is_state('switch.circadian_lighting_circadian_lighting','off') }}
          
  - platform: template
    sensors:
      trigger_circ_lights:
        value_template: >-
          {{ states('sensor.circadian_values') | float(0) > 0
             and is_state('binary_sensor.house_asleep', 'off')
             and is_state('binary_sensor.anybody_in_bed', 'off') }}
#            and is_state('binary_sensor.okay_to_turn_circ_lights_on', 'on') }}